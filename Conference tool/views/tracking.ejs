<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Detector</title>
    <script src="js/face-api.min.js"></script>
    <!-- <script src="js/tracking.js"></script> -->
    <link rel="stylesheet" href="css/tracking.css" />
    <style>
   
      canvas {
        position: absolute;
        margin-left:10%;
        margin-top:2%;
      }

      
    </style>
  </head>
  <body>
    <h1>Detection on Progress</h1>
    <video id="video" width="720" height="560" autoplay muted></video>
  </body>

  <script>
    const video = document.getElementById("video");

    Promise.all([
      faceapi.nets.tinyFaceDetector.loadFromUri("js/models"),
      faceapi.nets.faceLandmark68Net.loadFromUri("js/models"),
      faceapi.nets.faceRecognitionNet.loadFromUri("js/models"),
      faceapi.nets.faceExpressionNet.loadFromUri("js/models"),
    ]).then(startVideo);

    function startVideo() {
      navigator.getUserMedia(
        { video: {} },
        (stream) => (video.srcObject = stream),
        (err) => console.error(err)
      );
    }

    video.addEventListener("play", () => {
      const canvas = faceapi.createCanvasFromMedia(video);
      document.body.append(canvas);
      const displaySize = { width: video.width, height: video.height };
      faceapi.matchDimensions(canvas, displaySize);
      setInterval(async () => {
        const detections = await faceapi
          .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())
          .withFaceLandmarks()
          .withFaceExpressions();
        const resizedDetections = faceapi.resizeResults(
          detections,
          displaySize
        );
        canvas.getContext("2d").clearRect(0, 0, canvas.width, canvas.height);
        faceapi.draw.drawDetections(canvas, resizedDetections);
        // faceapi.draw.drawFaceLandmarks(canvas, resizedDetections)
        faceapi.draw.drawFaceExpressions(canvas, resizedDetections);
      }, 100);
    });
  </script>
</html>
